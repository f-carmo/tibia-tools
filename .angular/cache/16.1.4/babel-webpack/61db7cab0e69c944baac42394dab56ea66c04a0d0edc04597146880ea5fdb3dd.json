{"ast":null,"code":"import { createNewCard } from '../cooldown-card/cooldown-card.component';\nimport { Timer } from '../model/timer';\nimport { StorageComponent } from '../storage/storage.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../cooldown-card/cooldown-card.component\";\nfunction CooldownListComponent_app_cooldown_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-cooldown-card\", 1);\n    i0.ɵɵlistener(\"destroy\", function CooldownListComponent_app_cooldown_card_0_Template_app_cooldown_card_destroy_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeCard($event));\n    })(\"paused\", function CooldownListComponent_app_cooldown_card_0_Template_app_cooldown_card_paused_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.sortAndSave());\n    })(\"unpaused\", function CooldownListComponent_app_cooldown_card_0_Template_app_cooldown_card_unpaused_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.sortAndSave());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cooldownCard_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"timer\", cooldownCard_r1.timer);\n  }\n}\nexport let CooldownListComponent = /*#__PURE__*/(() => {\n  class CooldownListComponent {\n    constructor() {\n      this.cooldownCardList = [];\n    }\n    ngOnInit() {\n      this.loadSavedCards();\n    }\n    addNewCard(timer) {\n      this.cooldownCardList.push(createNewCard(timer));\n      this.sortAndSave();\n    }\n    removeCard(id) {\n      this.cooldownCardList = this.cooldownCardList.filter(cardComponent => cardComponent.timer.id !== id);\n      this.sortAndSave();\n    }\n    loadSavedCards() {\n      StorageComponent.load().forEach(obj => {\n        this.cooldownCardList.push(createNewCard(Timer.createFromJSON(obj.timer)));\n      });\n      this.sortAndSave();\n    }\n    sortAndSave() {\n      this.sortArrayByActive();\n      this.sortArrayByDate();\n      StorageComponent.updateCards(this.cooldownCardList);\n    }\n    sortArrayByDate() {\n      this.cooldownCardList.sort((cardA, cardB) => {\n        if (cardA.timer.active && cardB.timer.active) {\n          return cardA.timer.endTime.getTime() - cardB.timer.endTime.getTime();\n        }\n      });\n    }\n    sortArrayByActive() {\n      //first: sort by active and inactive\n      this.cooldownCardList.sort((cardA, cardB) => {\n        if (cardA.timer.active && !cardB.timer.active) {\n          return -1;\n        } else if (!cardA.timer.active && cardB.timer.active) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      //then: sort inactive timers by date\n      this.cooldownCardList.sort((cardA, cardB) => {\n        if (!cardA.timer.active && !cardB.timer.active) {\n          return cardA.timer.endTime.getTime() - cardB.timer.endTime.getTime();\n        } else {\n          return 0;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function CooldownListComponent_Factory(t) {\n      return new (t || CooldownListComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CooldownListComponent,\n      selectors: [[\"app-cooldown-list\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"timer\", \"destroy\", \"paused\", \"unpaused\", 4, \"ngFor\", \"ngForOf\"], [3, \"timer\", \"destroy\", \"paused\", \"unpaused\"]],\n      template: function CooldownListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, CooldownListComponent_app_cooldown_card_0_Template, 1, 1, \"app-cooldown-card\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.cooldownCardList);\n        }\n      },\n      dependencies: [i1.NgForOf, i2.CooldownCardComponent]\n    });\n  }\n  return CooldownListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}